[{"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/index.js":"1","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/reportWebVitals.js":"2","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/App.js":"3","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/album.jsx":"4","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/navbar.jsx":"5","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/users.jsx":"6","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/photos.jsx":"7","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/albumForm.jsx":"8","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/photoUpload.jsx":"9"},{"size":588,"mtime":1607678680686,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607678133982,"results":"12","hashOfConfig":"11"},{"size":958,"mtime":1608131464653,"results":"13","hashOfConfig":"11"},{"size":1172,"mtime":1608132170949,"results":"14","hashOfConfig":"11"},{"size":516,"mtime":1607685363876,"results":"15","hashOfConfig":"11"},{"size":686,"mtime":1608132156677,"results":"16","hashOfConfig":"11"},{"size":1091,"mtime":1608130564845,"results":"17","hashOfConfig":"11"},{"size":1147,"mtime":1608131326667,"results":"18","hashOfConfig":"11"},{"size":1166,"mtime":1608131140137,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11dxpif",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/index.js",[],["44","45"],"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/reportWebVitals.js",[],"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/App.js",[],"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/album.jsx",["46"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction Albums({ match }) {\n  const [albums, setAlbums] = useState([]);\n  const api = match.params.id\n    ? `https://jsonplaceholder.typicode.com/albums?userId=${match.params.id}`\n    : `https://jsonplaceholder.typicode.com/albums/`;\n\n  useEffect(() => {\n    fetchAlbum();\n  }, []);\n\n  async function fetchAlbum() {\n    const { data: albums } = await axios.get(api);\n    console.log(albums);\n    setAlbums(albums);\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\">\n        {match.params.id ? (\n          <Link\n            to={`/albums/newAlbum/${match.params.id}`}\n            className=\"btn btn-primary btn-sm\"\n          >\n            Add New Album\n          </Link>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"col\">\n        <ul>\n          {albums.map((album) => (\n            <li>\n              <Link to={`/photos/${album.id}`} key={album.id}>\n                {album.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Albums;\n","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/navbar.jsx",[],"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/users.jsx",[],"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/photos.jsx",["47","48"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst Photos = ({ match }) => {\n  const [photos, setPhotos] = useState([]);\n  console.log(match);\n  const api = match.params.id\n    ? `https://jsonplaceholder.typicode.com/photos?albumId=${match.params.id}`\n    : \"https://jsonplaceholder.typicode.com/photos\";\n\n  useEffect(() => {\n    fetchPhotos();\n  }, []);\n\n  async function fetchPhotos() {\n    const { data: photos } = await axios.get(api);\n    setPhotos(photos.slice(-100));\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\">\n        {match.params.id ? (\n          <Link\n            to={`/photos/newPhoto/${match.params.id}`}\n            className=\"btn btn-primary btn-sm\"\n          >\n            Add New Photo\n          </Link>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {photos.map((photo) => (\n        <div key={photo.id} className=\"col-6 col-md-3\">\n          <img className=\"card-img-top\" src={photo.url} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Photos;\n",["49","50"],"/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/albumForm.jsx",["51","52"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction AlbumForm(props) {\n  const [newAlbum, setAlbum] = useState({\n    title: \"\",\n    userId: props.match.params.id,\n  });\n  const api = `https://jsonplaceholder.typicode.com/albums`;\n\n  function handleChange({ currentTarget: input }) {\n    const data = { ...newAlbum };\n    data[input.name] = input.value;\n    setAlbum(data);\n  }\n\n  async function handleSubmit() {\n    const { data } = await axios.post(api, newAlbum);\n    alert(\"Added\" + \" \" + data.title);\n  }\n\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label for=\"exampleInputEmail1\">Title</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"title\"\n          name=\"title\"\n          value={newAlbum.title}\n          placeholder=\"Enter title\"\n          onChange={handleChange}\n        />\n        <Link\n          to={\"/albums\"}\n          className=\"btn btn-primary\"\n          onClick={() => handleSubmit()}\n        >\n          Submit\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumForm;\n","/home/rails/Desktop/TRAINING/React/ASSIGNMENT/navbarApp/src/components/photoUpload.jsx",["53"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction PhotoForm(props) {\n  const [newPhoto, setPhoto] = useState({\n    photo: \"\",\n    userId: props.match.params.id,\n  });\n  const api = `https://jsonplaceholder.typicode.com/photos`;\n\n  function handleChange({ currentTarget: input }) {\n    const data = { ...newPhoto };\n    data[input.name] = input.value;\n    setPhoto(data);\n  }\n\n  async function handleSubmit() {\n    const { data } = await axios.post(api, newPhoto);\n    console.log(data.photo.slice(-13));\n    alert(\"Added\" + \" \" + data.photo.slice(-13));\n  }\n\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label for=\"exampleInputEmail1\">photo</label>\n        <input\n          type=\"file\"\n          className=\"form-control\"\n          name=\"photo\"\n          value={newPhoto.photo}\n          placeholder=\"Enter photo\"\n          onChange={handleChange}\n        />\n        <Link\n          to={\"/photos\"}\n          className=\"btn btn-primary\"\n          onClick={() => handleSubmit()}\n        >\n          Submit\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoForm;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":13,"column":6,"nodeType":"60","endLine":13,"endColumn":8,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":14,"column":6,"nodeType":"60","endLine":14,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":37,"column":11,"nodeType":"66","endLine":37,"endColumn":59},{"ruleId":"54","replacedBy":"67"},{"ruleId":"56","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":20,"column":19,"nodeType":"75","messageId":"76","endLine":20,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":21,"column":19,"nodeType":"75","messageId":"76","endLine":21,"endColumn":20},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAlbum'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'fetchPhotos'. Either include it or remove the dependency array.",["80"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["77"],["78"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchAlbum]",{"range":"85","text":"86"},"Update the dependencies array to be: [fetchPhotos]",{"range":"87","text":"88"},[400,402],"[fetchAlbum]",[426,428],"[fetchPhotos]"]